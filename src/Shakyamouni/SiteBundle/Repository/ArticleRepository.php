<?php

namespace Shakyamouni\SiteBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * ArticleRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ArticleRepository extends EntityRepository {

    public function findAllBySubCategoryASCAndTitleASC()
    {
        $qb = $this->createQueryBuilder('a')
                ->leftJoin('a.subCategory', 'sc')
                ->addSelect('sc')
                ->OrderBy('a.subCategory', 'ASC')
                ->addOrderBy('a.position', 'ASC');

        return $qb->getQuery()
                        ->getResult();
    }

    public function getArticlesBySubCategory($subcategory_slug)
    {
        $qb = $this->createQueryBuilder('a')
                ->leftJoin('a.subCategory', 'sc')
                ->addSelect('sc')
                ->where('sc.slug = :subcategory_slug')
                ->setParameter('subcategory_slug', $subcategory_slug)
                ->OrderBy('a.position', 'ASC');

        return $qb->getQuery()
                        ->getResult();
    }
    
        public function getArticlesBySubCategoryWithPosition($subcategory_slug)
    {
        $qb = $this->createQueryBuilder('a')
                ->leftJoin('a.subCategory', 'sc')
                ->addSelect('sc')
                ->where('sc.slug = :subcategory_slug')
                ->setParameter('subcategory_slug', $subcategory_slug)
                ->OrderBy('a.position', 'ASC');

        return $qb->getQuery()
                        ->getResult();
    }
    
    public function getArticleCoursHebdoQuery(){
        $qb = $this->createQueryBuilder('a')
                ->leftJoin('a.subCategory', 'sc')
                ->addSelect('sc')
                ->leftJoin('sc.category', 'c')
                ->addSelect('c')
                //->andWhere('c.id = :category_id')
                //->setParameter('category_id', 2)
                ->OrderBy('a.title', 'DESC');

        return $qb;
    }

    public function getArticleBySubcategorySlugAndCategorySlug($category, $subcategory, $slug)
    {
        $qb = $this->createQueryBuilder('a')
                ->where('a.slug = :article_slug')
                ->setParameter('article_slug', $slug)
                ->leftJoin('a.subCategory', 'sc')
                ->addSelect('sc')
                ->andWhere('sc.slug = :subcategory_slug')
                ->setParameter('subcategory_slug', $subcategory)
                ->leftJoin('sc.category', 'c')
                ->addSelect('c')
                ->andWhere('c.slug = :category_slug')
                ->setParameter('category_slug', $category);

        return $qb->getQuery()
                        ->getOneOrNullResult();
    }

}