<?php

namespace Shakyamouni\SiteBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * ArticleRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ArticleEventRepository extends EntityRepository {

    public function findAllByEventASCAndTitleASC()
    {
        $qb = $this->createQueryBuilder('ae')
                ->leftJoin('ae.event', 'e')
                ->addSelect('e')
                ->OrderBy('e.title', 'ASC')
                ->addOrderBy('ae.title', 'ASC');

        return $qb->getQuery()
                        ->getResult();
    }
    
    public function getFutureArticleEventsQuery()
    {
        $qb = $this->createQueryBuilder('ae')
             //   ->where('ae.eventDateStart < :today')
                ->andWhere('ae.isVisible = :isPublished')
                ->setParameter('isPublished', true)
                ->andWhere('ae.eventDateEnd >= :today')
                ->setParameter('today', new \DateTime('now'))
                ->orderBy('ae.eventDateStart', 'ASC');

        return $qb;
    }

    public function getArticleEventsByEvent($event_slug)
    {
        $qb = $this->createQueryBuilder('ae')
                ->leftJoin('ae.event', 'e')
                ->addSelect('e')
                ->andWhere('e.slug = :event_slug')
                ->setParameter('event_slug', $event_slug);

        return $qb->getQuery()
                        ->getResult();
    }
    
//    public function getFirstArticleEventBySubCategory($subcategory_slug){
//        $qb = $this->createQueryBuilder('ae')
//                ->leftJoin('ae.event', 'e')
//                ->addSelect('e')
//                ->leftJoin('e.subCategoryEvent', 'sce')
//                ->addSelect('sce')
//                ->andWhere('sce.slug = :subcategory_event_slug')
//                ->setParameter('subcategory_event_slug', $subcategory_slug);
//
//        return $qb->getQuery()
//                        ->getFirstResult();
//    }

    public function getArticlesEventsBySubCategoryEventAndEvent($subcategory_slug, $event_slug)
    {
        $qb = $this->createQueryBuilder('ae')
                ->leftJoin('ae.event', 'e')
                ->addSelect('e')
                ->leftJoin('e.subCategoryEvent', 'sce')
                ->addSelect('sce')
                ->andWhere('sce.slug = :subcategory_event_slug')
                ->setParameter('subcategory_event_slug', $subcategory_slug)
                ->andWhere('e.slug = :event_slug')
                ->setParameter('event_slug', $event_slug)
                ->orderBy('ae.eventDateStart', 'ASC');

        return $qb->getQuery()
                        ->getResult();
    }

}